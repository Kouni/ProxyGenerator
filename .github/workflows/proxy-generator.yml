name: Proxy Generator

permissions:
  contents: read
  pages: write
  id-token: write

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/proxy-generator.yml'
      - 'src/**'
      - 'pyproject.toml'

jobs:
  generate-proxies:
    runs-on: ubuntu-latest
    outputs:
      proxy-count: ${{ steps.count.outputs.count }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install
    
    - name: Run tests
      run: |
        export PYTHONPATH="${PYTHONPATH}:src"
        poetry run pytest -v
        echo "All tests passed successfully"
    
    - name: Create data directory
      run: mkdir -p data
    
    - name: Run proxy generator
      run: |
        export PYTHONPATH="${PYTHONPATH}:src"
        poetry run proxygenerator
        echo "Proxy generation completed at $(date)"
    
    - name: Check generated data
      id: count
      run: |
        if [ -f "data/proxies.json" ]; then
          echo "Generated proxy data:"
          echo "File size: $(du -h data/proxies.json | cut -f1)"
          
          # Check if new format with metadata exists
          if jq -e '.metadata' data/proxies.json > /dev/null 2>&1; then
            # New format with metadata
            COUNT=$(jq '.metadata.count' data/proxies.json)
            GENERATED_AT=$(jq -r '.metadata.generated_at' data/proxies.json)
            echo "Number of proxies: $COUNT"
            echo "Generated at: $GENERATED_AT"
            echo "count=$COUNT" >> $GITHUB_OUTPUT
            echo "Sample proxies:"
            jq -r '.proxies[:3][] | "\(.IP_Address_td):\(.Port_td) (\(.Country_td))"' data/proxies.json
          else
            # Legacy format (array)
            COUNT=$(jq 'length' data/proxies.json)
            echo "Number of proxies: $COUNT"
            echo "count=$COUNT" >> $GITHUB_OUTPUT
            echo "Sample proxies:"
            jq -r '.[:3][] | "\(.IP_Address_td):\(.Port_td) (\(.Country_td))"' data/proxies.json
          fi
        else
          echo "No proxy data generated"
          exit 1
        fi
    
    - name: Upload proxy data
      uses: actions/upload-artifact@v4
      with:
        name: proxy-data-${{ github.run_number }}
        path: data/proxies.json
        retention-days: 7

  deploy-pages:
    needs: generate-proxies
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download proxy data
      uses: actions/download-artifact@v4
      with:
        name: proxy-data-${{ github.run_number }}
        path: data
    
    - name: Prepare GitHub Pages
      run: |
        mkdir -p _site
        cp data/proxies.json _site/
        
        # Create index page
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>ProxyGenerator Data</title>
          <meta charset="utf-8">
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .info { background: #f5f5f5; padding: 20px; border-radius: 5px; }
          </style>
        </head>
        <body>
          <h1>ProxyGenerator</h1>
          <div class="info">
            <p>Fresh proxy data updated every hour</p>
            <p>Last updated: $(date)</p>
            <p>Total proxies: ${{ needs.generate-proxies.outputs.proxy-count }}</p>
          </div>
          <h2>Download</h2>
          <ul>
            <li><a href="proxies.json">proxies.json</a> - Raw proxy data</li>
          </ul>
        </body>
        </html>
        EOF
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4